[tox]
envlist = py3{8,9,10,11,12,13}-linux,dev
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    ubuntu-22.04: linux
    ubuntu-24.04: linux

[base]
deps =
    pip>=22.1
    setuptools_scm[toml]

[build]
deps =
    pip>=22.1
    build
    twine

[testenv]
skip_install = true

setenv =
    COVERAGE_FILE = .coverage.{envname}

passenv =
    SETUPTOOLS_SCM_DEBUG
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    REPO_CFG
    pythonLocation

allowlist_externals =
    bash

deps =
    {[base]deps}
    # logging_tree
    -e .[test,cov]

commands =
    python -m pytest -v . --capture={posargs:"fd"} --cov=timewreport --cov-branch --cov-report term-missing

[testenv:coverage]
basepython =
    python3

skip_install =
    true

allowlist_externals =
    bash

deps =
    coverage

commands =
    bash -c 'coverage combine .coverage.py*'
    coverage xml

depends =
    py38
    py39
    py310
    py311
    py312
    py313

[coverage:run]
parallel=True

[testenv:dev]
skip_install = true

passenv =
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    # logging_tree
    -e .

commands =
    python -c 'from timewreport.parser import TimeWarriorParser'

[testenv:changes]
skip_install = true

allowlist_externals =
    bash

passenv =
    {[testenv:dev]passenv}
    VERSION

deps =
    {[base]deps}
    changes: https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    changes: bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    SETUPTOOLS_SCM_DEBUG

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv =
    CI
    OS
    PYTHONIOENCODING

deps =
    pip>=22.1

commands =
    python -m pip install timew-report --pre --force-reinstall --prefer-binary -f dist/
    python -m pip show -f timew-report

[testenv:lint]
allowlist_externals =
    bash

passenv =
    CI
    PYTHONIOENCODING

deps =
    {[base]deps}
    -r requirements.txt
    pylint

commands =
    pylint --fail-under=8 src/

[testenv:style]
envdir = {toxworkdir}/tests

passenv =
    {[testenv:tests]passenv}

deps =
    pip>=23.1
    flake8

commands =
    flake8 src/

[testenv:mypy]
skip_install = true

deps =
    pip>=23.1
    -r requirements.txt
    mypy

commands =
    python -m mypy --follow-imports=normal --check-untyped-defs --install-types --non-interactive src/

[testenv:reuse]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    reuse
    sbom4python

commands =
    reuse {posargs:"lint"}

[testenv:sec]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=23.1
    bandit[toml]

commands =
    bandit -c pyproject.toml -r src/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf __pycache__ .coverage.* build dist'
    bash -c 'rm -rf src/*.egg-info src/*/__pycache__'
